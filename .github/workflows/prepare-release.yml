name: prepare release

on:
  push:
    branches:
      - main
      - 'release/*'

jobs:
  prepare:
    name: prepare release
    runs-on: ubuntu-latest
    permissions:
      contents: write # required for pushing commits and tags

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # full history for analysing commits

      - name: set up rust
        uses: dtolnay/rust-toolchain@stable

      - name: configure git user
        run: |
          git config --global user.name "jamie"
          git config --global user.email "jamie@prettypragmatic.com"

      - name: run release tool
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Running release tool for main branch..."
          if ! cargo run --bin release-tool; then
            echo "::error::Release tool failed on main branch"
            exit 1
          fi
          echo "Release tool completed successfully"
          
          # extract version from workspace Cargo.toml for commit message
          VERSION=$(grep '^version = ' Cargo.toml | head -1 | sed 's/version = "\(.*\)"/\1/')
          echo "Detected version: $VERSION"
          
          # stage and commit all changes made by release-tool
          git add -A
          if [[ $(git status --porcelain) ]]; then
            git commit -m "chore(release): v$VERSION"
            git tag "v$VERSION"
            echo "Created commit and tag for v$VERSION"
          else
            echo "No changes to commit"
          fi

      - name: run release tool (dry run)
        if: startsWith(github.ref, 'refs/heads/release/')
        run: |
          echo "Running release tool dry run for release branch..."
          if ! cargo run --bin release-tool -- --dry-run; then
            echo "::error::Release tool dry run failed"
            exit 1
          fi
          echo "Release tool dry run completed successfully"

      - name: check for changes to push
        id: check_changes
        run: |
          if [[ $(git status --porcelain) ]]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected:"
            git status --short
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No changes to push"
          fi

      - name: push changes and tags
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          echo "Pushing changes and tags..."
          git push origin HEAD
          git push origin --tags
          echo "Successfully pushed changes and tags" 