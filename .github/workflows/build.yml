name: build & release

on:
  push:
    branches:
      - main
      - feature/*
    tags:
      - v*
  pull_request:
    branches:
      - main

jobs:
  build:
    name: build - ${{ matrix.settings.target }} (${{ matrix.settings.host }})
    runs-on: ${{ matrix.settings.host }}
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            platform: linux-x64-gnu
          - host: macos-latest
            target: x86_64-apple-darwin
            platform: darwin-x64
          - host: macos-latest
            target: aarch64-apple-darwin
            platform: darwin-arm64
          - host: windows-latest
            target: x86_64-pc-windows-msvc
            platform: win32-x64-msvc

    steps:
      - uses: actions/checkout@v4
      
      - name: setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      
      - name: install rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.settings.target }}
      
      - name: build
        run: |
          cd commit-wizard-napi
          npm install
          npm run build
          ls -la
          find . -name "*.node" -type f
      
      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bindings-${{ matrix.settings.platform }}
          path: commit-wizard-napi/*.node
          if-no-files-found: error
  
  publish:
    name: publish
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - uses: actions/checkout@v4
      
      - name: setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org/'
      
      - name: download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: move artifacts
        run: |
          mkdir -p commit-wizard-napi/npm/linux-x64-gnu
          mkdir -p commit-wizard-napi/npm/darwin-x64
          mkdir -p commit-wizard-napi/npm/darwin-arm64
          mkdir -p commit-wizard-napi/npm/win32-x64-msvc
          
          cp artifacts/bindings-linux-x64-gnu/*.node commit-wizard-napi/
          cp artifacts/bindings-darwin-x64/*.node commit-wizard-napi/
          cp artifacts/bindings-darwin-arm64/*.node commit-wizard-napi/
          cp artifacts/bindings-win32-x64-msvc/*.node commit-wizard-napi/
      
      - name: install dependencies
        run: |
          cd commit-wizard-napi
          npm install
      
      - name: publish
        run: |
          cd commit-wizard-napi
          npm run prepare_for_prepublish
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}